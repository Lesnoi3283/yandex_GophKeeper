version: '3.3'

services:
  postgresProd:
    image: postgres:15
    container_name: postgresProd
    restart: always
    environment:
      POSTGRES_USER: GophKeeper_user
      POSTGRES_PASSWORD: password123
      POSTGRES_DB: GophKeeperDB
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network

  vault:
    image: hashicorp/vault:1.18
    container_name: vault
    restart: always
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: some_vault_root_token
      VAULT_DEV_LISTEN_ADDRESS: "0.0.0.0:8200"
      VAULT_ADDR: "http://127.0.0.1:8200"
    command: >
      /bin/sh -c "
      vault server -dev -dev-root-token-id=some_vault_root_token &
      sleep 5 &&
      export VAULT_TOKEN=some_vault_root_token &&
      vault secrets enable -path=bank_cards kv &&
      vault secrets enable -path=login_and_password kv &&
      vault secrets enable -path=text_data kv &&
      vault secrets enable -path=bin_data kv &&
      wait
      "
    ports:
      - "8200:8200"
    volumes:
      - vault-data:/vault/file
    networks:
      - app-network

  app:
    build: .
    container_name: gophKeeper_app
    restart: on-failure
    depends_on:
      - postgresProd
      - vault
    environment:
      SERVER_ADDRESS: "0.0.0.0:8080"
      GRPC_ADDRESS: "0.0.0.0:50051"
      LOG_LEVEL: "debug"
      DATABASE_DSN: "postgres://GophKeeper_user:password123@postgresProd:5432/GophKeeperDB?sslmode=disable"
      JWT_SECRET_KEY: "someJwtSecret"
      JWT_TIMEOUT_HOURS: 24
      HASHI_CORP_TOKEN: "some_vault_root_token"
      HASHI_CORP_ADDRESS: "http://vault:8200"
      DEBUG_MODE: "true"
      MAX_BIN_DATA_CHUNK_SIZE: 16 # in kb
    ports:
      - "8080:8080"
      - "50051:50051"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
  vault-data:
